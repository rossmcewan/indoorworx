<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ExpandToFullScreen" xml:space="preserve">
    <value>Expand to full screen</value>
  </data>
  <data name="FastForwardOff" xml:space="preserve">
    <value>Fast Forward Off</value>
  </data>
  <data name="FastForwardOn" xml:space="preserve">
    <value>Fast Forward On</value>
  </data>
  <data name="Forward" xml:space="preserve">
    <value>Press and hold for next frame</value>
  </data>
  <data name="MarkIn" xml:space="preserve">
    <value>Set Mark In</value>
  </data>
  <data name="MarkOut" xml:space="preserve">
    <value>Set Mark Out</value>
  </data>
  <data name="Mute" xml:space="preserve">
    <value>Mute</value>
  </data>
  <data name="Pause" xml:space="preserve">
    <value>Pause</value>
  </data>
  <data name="Play" xml:space="preserve">
    <value>Play</value>
  </data>
  <data name="PlaySubClipOff" xml:space="preserve">
    <value>Exit Play SubClip Mode</value>
  </data>
  <data name="PlaySubClipOn" xml:space="preserve">
    <value>Enter to Play SubClip Mode</value>
  </data>
  <data name="Rewind" xml:space="preserve">
    <value>Press and hold for previous frame</value>
  </data>
  <data name="RewindOff" xml:space="preserve">
    <value>Rewind Off</value>
  </data>
  <data name="RewindOn" xml:space="preserve">
    <value>Rewind On</value>
  </data>
  <data name="ShowMetadata" xml:space="preserve">
    <value>Show metadata</value>
  </data>
  <data name="SlowMotionOff" xml:space="preserve">
    <value>Stop Slow Motion</value>
  </data>
  <data name="SlowMotionOn" xml:space="preserve">
    <value>Start Slow Motion</value>
  </data>
  <data name="Sound" xml:space="preserve">
    <value>Sound</value>
  </data>
  <data name="MediaRepeatOn" xml:space="preserve">
    <value>Turn repeat on</value>
  </data>
  <data name="MoveToEnd" xml:space="preserve">
    <value>Move to end</value>
  </data>
  <data name="ShowCommentsOff" xml:space="preserve">
    <value>Hide comments</value>
  </data>
  <data name="ShowCommentsOn" xml:space="preserve">
    <value>Show comments</value>
  </data>
  <data name="AddFolder" xml:space="preserve">
    <value>Add folder</value>
  </data>
  <data name="AddItemToMediaBin" xml:space="preserve">
    <value>Add item to Media Bin</value>
  </data>
  <data name="DeleteAsset" xml:space="preserve">
    <value>Delete asset</value>
  </data>
  <data name="HeaderInfo" xml:space="preserve">
    <value>Library</value>
  </data>
  <data name="HideAudios" xml:space="preserve">
    <value>Hide audios</value>
  </data>
  <data name="HideImages" xml:space="preserve">
    <value>Hide images</value>
  </data>
  <data name="HideVideos" xml:space="preserve">
    <value>Hide videos</value>
  </data>
  <data name="ListView" xml:space="preserve">
    <value>List view</value>
  </data>
  <data name="ShowAudios" xml:space="preserve">
    <value>Show audios</value>
  </data>
  <data name="ShowImages" xml:space="preserve">
    <value>Show images</value>
  </data>
  <data name="ShowVideos" xml:space="preserve">
    <value>Show videos</value>
  </data>
  <data name="ThumbnailView" xml:space="preserve">
    <value>Thumbnail view</value>
  </data>
  <data name="ToolBar" xml:space="preserve">
    <value>ToolBar</value>
  </data>
  <data name="Up" xml:space="preserve">
    <value>Up</value>
  </data>
  <data name="ZoomIn" xml:space="preserve">
    <value>Zoom In (+)</value>
  </data>
  <data name="ZoomOut" xml:space="preserve">
    <value>Zoom Out (-)</value>
  </data>
  <data name="test" xml:space="preserve">
    <value>test</value>
  </data>
  <data name="MediaRepeatOff" xml:space="preserve">
    <value>Turn repeat off</value>
  </data>
  <data name="DropAllowed" xml:space="preserve">
    <value>/RCE.Infrastructure;component/Images/DropAllowed.png</value>
  </data>
  <data name="DropNotAllowed" xml:space="preserve">
    <value>/RCE.Infrastructure;component/Images/DropNotAllowed.png</value>
  </data>
  <data name="FrameForward" xml:space="preserve">
    <value>Press and hold for next frame</value>
  </data>
  <data name="FrameRewind" xml:space="preserve">
    <value>Press and hold for previous frame</value>
  </data>
  <data name="GoToTimeCode" xml:space="preserve">
    <value>Go to position</value>
  </data>
  <data name="MaxValueSmpte12MOverflowException" xml:space="preserve">
    <value>The resulting timecode {0} is out of the expected range of MaxValue {1}.</value>
  </data>
  <data name="MinValueSmpte12MOverflowException" xml:space="preserve">
    <value>The resulting timecode is out of the expected range of MinValue.</value>
  </data>
  <data name="Smpte12MBadFormat" xml:space="preserve">
    <value>The timecode provided is not in the correct format.</value>
  </data>
  <data name="Smpte12MOutOfRange" xml:space="preserve">
    <value>The timecode provided is out of the expected range.</value>
  </data>
  <data name="Smpte12M_2398_BadFormat" xml:space="preserve">
    <value>Timecode frame value is not in the expected range for SMPTE 23.98 IVTC.</value>
  </data>
  <data name="Smpte12M_24_BadFormat" xml:space="preserve">
    <value>Timecode frame value is not in the expected range for SMPTE 24fps Film Sync.</value>
  </data>
  <data name="Smpte12M_25_BadFormat" xml:space="preserve">
    <value>Timecode frame value is not in the expected range for SMPTE 25fps PAL.</value>
  </data>
  <data name="Smpte12M_2997_Drop_BadFormat" xml:space="preserve">
    <value>Timecode frame value is not in the expected range for SMPTE 29.97 DropFrame.</value>
  </data>
  <data name="Smpte12M_2997_NonDrop_BadFormat" xml:space="preserve">
    <value>Timecode frame value is not in the expected range for SMTPE 29.97 NonDrop.</value>
  </data>
  <data name="Smpte12M_30_BadFormat" xml:space="preserve">
    <value>Timecode frame value is not in the expected range for SMPTE 30fps.</value>
  </data>
</root>