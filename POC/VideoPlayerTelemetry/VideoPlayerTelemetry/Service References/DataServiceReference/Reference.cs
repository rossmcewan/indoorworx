//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50401.0
// 
namespace VideoPlayerTelemetry.DataServiceReference {
    using System.Runtime.Serialization;
using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Telemetry", Namespace="http://schemas.datacontract.org/2004/07/VideoPlayerTelemetry.Models")]
    public partial class Telemetry : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int AltitudeField;
        
        private int CadenceField;
        
        private decimal DistanceField;
        
        private VideoPlayerTelemetry.DataServiceReference.GPSCoordinates GPSCoordinatesField;
        
        private VideoPlayerTelemetry.DataServiceReference.GearRatio GearRatioField;
        
        private int HeartRateField;
        
        private decimal PercentageOfThresholdField;
        
        private decimal SpeedField;
        
        private System.TimeSpan TimePositionField;
        
        private decimal TorqueField;
        
        private decimal WattsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Altitude {
            get {
                return this.AltitudeField;
            }
            set {
                if ((this.AltitudeField.Equals(value) != true)) {
                    this.AltitudeField = value;
                    this.RaisePropertyChanged("Altitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Cadence {
            get {
                return this.CadenceField;
            }
            set {
                if ((this.CadenceField.Equals(value) != true)) {
                    this.CadenceField = value;
                    this.RaisePropertyChanged("Cadence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Distance {
            get {
                return this.DistanceField;
            }
            set {
                if ((this.DistanceField.Equals(value) != true)) {
                    this.DistanceField = value;
                    this.RaisePropertyChanged("Distance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VideoPlayerTelemetry.DataServiceReference.GPSCoordinates GPSCoordinates {
            get {
                return this.GPSCoordinatesField;
            }
            set {
                if ((object.ReferenceEquals(this.GPSCoordinatesField, value) != true)) {
                    this.GPSCoordinatesField = value;
                    this.RaisePropertyChanged("GPSCoordinates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VideoPlayerTelemetry.DataServiceReference.GearRatio GearRatio {
            get {
                return this.GearRatioField;
            }
            set {
                if ((object.ReferenceEquals(this.GearRatioField, value) != true)) {
                    this.GearRatioField = value;
                    this.RaisePropertyChanged("GearRatio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HeartRate {
            get {
                return this.HeartRateField;
            }
            set {
                if ((this.HeartRateField.Equals(value) != true)) {
                    this.HeartRateField = value;
                    this.RaisePropertyChanged("HeartRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PercentageOfThreshold {
            get {
                return this.PercentageOfThresholdField;
            }
            set {
                if ((this.PercentageOfThresholdField.Equals(value) != true)) {
                    this.PercentageOfThresholdField = value;
                    this.RaisePropertyChanged("PercentageOfThreshold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Speed {
            get {
                return this.SpeedField;
            }
            set {
                if ((this.SpeedField.Equals(value) != true)) {
                    this.SpeedField = value;
                    this.RaisePropertyChanged("Speed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan TimePosition {
            get {
                return this.TimePositionField;
            }
            set {
                if ((this.TimePositionField.Equals(value) != true)) {
                    this.TimePositionField = value;
                    this.RaisePropertyChanged("TimePosition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Torque {
            get {
                return this.TorqueField;
            }
            set {
                if ((this.TorqueField.Equals(value) != true)) {
                    this.TorqueField = value;
                    this.RaisePropertyChanged("Torque");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Watts {
            get {
                return this.WattsField;
            }
            set {
                if ((this.WattsField.Equals(value) != true)) {
                    this.WattsField = value;
                    this.RaisePropertyChanged("Watts");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        public bool IsAdded { get; set; }

        public double ThresholdPercent
        {
            get { return 100; }
        }
        

        private static DateTime now = DateTime.Now;
        public DateTime DateTimePosition
        {
            get
            {
                return new DateTime(now.Year, now.Month, now.Day, TimePosition.Hours, TimePosition.Minutes, TimePosition.Seconds);
            }
        }

        internal void FirePropertyChanged(string p)
        {
            RaisePropertyChanged(p);
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GPSCoordinates", Namespace="http://schemas.datacontract.org/2004/07/VideoPlayerTelemetry.Models")]
    public partial class GPSCoordinates : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string LatitudeField;
        
        private string LongitudeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LatitudeField, value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LongitudeField, value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GearRatio", Namespace="http://schemas.datacontract.org/2004/07/VideoPlayerTelemetry.Models")]
    public partial class GearRatio : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int BigRingField;
        
        private int SmallRingField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BigRing {
            get {
                return this.BigRingField;
            }
            set {
                if ((this.BigRingField.Equals(value) != true)) {
                    this.BigRingField = value;
                    this.RaisePropertyChanged("BigRing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SmallRing {
            get {
                return this.SmallRingField;
            }
            set {
                if ((this.SmallRingField.Equals(value) != true)) {
                    this.SmallRingField = value;
                    this.RaisePropertyChanged("SmallRing");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DataServiceReference.IDataService")]
    public interface IDataService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataService/ProvideTelemetryData", ReplyAction="http://tempuri.org/IDataService/ProvideTelemetryDataResponse")]
        System.IAsyncResult BeginProvideTelemetryData(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<VideoPlayerTelemetry.DataServiceReference.Telemetry> EndProvideTelemetryData(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDataServiceChannel : VideoPlayerTelemetry.DataServiceReference.IDataService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProvideTelemetryDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ProvideTelemetryDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<VideoPlayerTelemetry.DataServiceReference.Telemetry> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<VideoPlayerTelemetry.DataServiceReference.Telemetry>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataServiceClient : System.ServiceModel.ClientBase<VideoPlayerTelemetry.DataServiceReference.IDataService>, VideoPlayerTelemetry.DataServiceReference.IDataService {
        
        private BeginOperationDelegate onBeginProvideTelemetryDataDelegate;
        
        private EndOperationDelegate onEndProvideTelemetryDataDelegate;
        
        private System.Threading.SendOrPostCallback onProvideTelemetryDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public DataServiceClient() {
        }
        
        public DataServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DataServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<ProvideTelemetryDataCompletedEventArgs> ProvideTelemetryDataCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VideoPlayerTelemetry.DataServiceReference.IDataService.BeginProvideTelemetryData(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginProvideTelemetryData(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<VideoPlayerTelemetry.DataServiceReference.Telemetry> VideoPlayerTelemetry.DataServiceReference.IDataService.EndProvideTelemetryData(System.IAsyncResult result) {
            return base.Channel.EndProvideTelemetryData(result);
        }
        
        private System.IAsyncResult OnBeginProvideTelemetryData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((VideoPlayerTelemetry.DataServiceReference.IDataService)(this)).BeginProvideTelemetryData(callback, asyncState);
        }
        
        private object[] OnEndProvideTelemetryData(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<VideoPlayerTelemetry.DataServiceReference.Telemetry> retVal = ((VideoPlayerTelemetry.DataServiceReference.IDataService)(this)).EndProvideTelemetryData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnProvideTelemetryDataCompleted(object state) {
            if ((this.ProvideTelemetryDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ProvideTelemetryDataCompleted(this, new ProvideTelemetryDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ProvideTelemetryDataAsync() {
            this.ProvideTelemetryDataAsync(null);
        }
        
        public void ProvideTelemetryDataAsync(object userState) {
            if ((this.onBeginProvideTelemetryDataDelegate == null)) {
                this.onBeginProvideTelemetryDataDelegate = new BeginOperationDelegate(this.OnBeginProvideTelemetryData);
            }
            if ((this.onEndProvideTelemetryDataDelegate == null)) {
                this.onEndProvideTelemetryDataDelegate = new EndOperationDelegate(this.OnEndProvideTelemetryData);
            }
            if ((this.onProvideTelemetryDataCompletedDelegate == null)) {
                this.onProvideTelemetryDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnProvideTelemetryDataCompleted);
            }
            base.InvokeAsync(this.onBeginProvideTelemetryDataDelegate, null, this.onEndProvideTelemetryDataDelegate, this.onProvideTelemetryDataCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override VideoPlayerTelemetry.DataServiceReference.IDataService CreateChannel() {
            return new DataServiceClientChannel(this);
        }
        
        private class DataServiceClientChannel : ChannelBase<VideoPlayerTelemetry.DataServiceReference.IDataService>, VideoPlayerTelemetry.DataServiceReference.IDataService {
            
            public DataServiceClientChannel(System.ServiceModel.ClientBase<VideoPlayerTelemetry.DataServiceReference.IDataService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginProvideTelemetryData(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("ProvideTelemetryData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<VideoPlayerTelemetry.DataServiceReference.Telemetry> EndProvideTelemetryData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<VideoPlayerTelemetry.DataServiceReference.Telemetry> _result = ((System.Collections.ObjectModel.ObservableCollection<VideoPlayerTelemetry.DataServiceReference.Telemetry>)(base.EndInvoke("ProvideTelemetryData", _args, result)));
                return _result;
            }
        }
    }
}
