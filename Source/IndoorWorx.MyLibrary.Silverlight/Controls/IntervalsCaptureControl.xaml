<UserControl x:Class="IndoorWorx.MyLibrary.Controls.IntervalsCaptureControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:sdk="http://schemas.microsoft.com/winfx/2006/xaml/presentation/sdk" 
    xmlns:toolkit="http://schemas.microsoft.com/winfx/2006/xaml/presentation/toolkit"             
    xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"     
    xmlns:converters="clr-namespace:IndoorWorx.Infrastructure.Converters;assembly=IndoorWorx.Infrastructure.Silverlight"             
    mc:Ignorable="d"
    d:DesignHeight="300" d:DesignWidth="400">
    <UserControl.Resources>
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converters:IntegerToTimeSpanConverter x:Key="IntegerToTimeSpanConverter"/>
        <converters:CollectionSizeToVisibilityConverter x:Key="CollectionSizeToVisibilityConverter"/>
    </UserControl.Resources>
    <Grid x:Name="LayoutRoot">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>        
        <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
            <ItemsControl x:Name="IntervalItems">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="5"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <sdk:Label Content="{Binding MyLibraryResources.DurationLabel, Source={StaticResource MyLibraryResources}}" FontWeight="SemiBold"/>
                                <StackPanel Grid.Column="1" Orientation="Horizontal">
                                    <toolkit:NumericUpDown Margin="2" Width="50" Value="{Binding IntervalDuration.Minutes, Mode=TwoWay}"/>
                                    <sdk:Label Content="{Binding MyLibraryResources.MinutesLabel, Source={StaticResource MyLibraryResources}}"/>
                                    <toolkit:NumericUpDown Margin="2" Width="50" Value="{Binding IntervalDuration.Seconds, Mode=TwoWay}"/>
                                    <sdk:Label Content="{Binding MyLibraryResources.SecondsLabel, Source={StaticResource MyLibraryResources}}"/>
                                </StackPanel>
                                <sdk:Label Content="{Binding MyLibraryResources.IntervalTypeLabel, Source={StaticResource MyLibraryResources}}" Grid.Column="3" FontWeight="SemiBold"/>
                                <ComboBox Margin="2" Grid.Column="4" HorizontalAlignment="Stretch" ItemsSource="{Binding DataContext.IntervalTypes, Mode=OneWay, ElementName=LayoutRoot}" DisplayMemberPath="Name" SelectedItem="{Binding IntervalType, Mode=OneWay}"/>                                                                                                
                                <sdk:Label Content="{Binding MyLibraryResources.NumberOfRepeatsLabel, Source={StaticResource MyLibraryResources}}" Grid.Row="1" FontWeight="SemiBold"/>
                                <toolkit:NumericUpDown Margin="2" Grid.Column="1" Grid.Row="1" HorizontalAlignment="Left" Width="50" Value="{Binding Repeats, Mode=TwoWay}"/>
                                <sdk:Label Content="{Binding MyLibraryResources.RecoveryIntervalLabel, Source={StaticResource MyLibraryResources}}" Grid.Row="1" Grid.Column="3" FontWeight="SemiBold"/>
                                <StackPanel Grid.Row="1" Grid.Column="4" Orientation="Horizontal">
                                    <toolkit:NumericUpDown Margin="2" Width="50" Value="{Binding RecoveryInterval.Minutes, Mode=TwoWay}"/>
                                    <sdk:Label Content="{Binding MyLibraryResources.MinutesLabel, Source={StaticResource MyLibraryResources}}"/>
                                    <toolkit:NumericUpDown Margin="2" Width="50" Value="{Binding RecoveryInterval.Seconds, Mode=TwoWay}"/>
                                    <sdk:Label Content="{Binding MyLibraryResources.SecondsLabel, Source={StaticResource MyLibraryResources}}"/>
                                </StackPanel>
                            </Grid>
                            <toolkit:Expander Grid.Row="1" Header="{Binding MyLibraryResources.OptionsLabel, Source={StaticResource MyLibraryResources}}" IsTabStop="False">
                                <StackPanel>
                                    <TextBlock Text="{Binding MyLibraryResources.CountDownsHeader, Source={StaticResource MyLibraryResources}}" FontWeight="SemiBold" Margin="2"/>
                                    <StackPanel Orientation="Horizontal">
                                        <sdk:Label Content="{Binding MyLibraryResources.CountDownToStartOfIntervalLabel, Source={StaticResource MyLibraryResources}}" Width="200"/>
                                        <CheckBox Margin="2" IsChecked="{Binding ToStart.IsActive, Mode=TwoWay}"/>
                                    </StackPanel>
                                    <StackPanel Visibility="{Binding ToStart.IsActive, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <StackPanel Orientation="Horizontal">
                                            <sdk:Label Content="{Binding MyLibraryResources.FromLabel, Source={StaticResource MyLibraryResources}}"/>
                                            <toolkit:NumericUpDown Margin="2" Width="50" Value="{Binding ToStart.Duration.Minutes, Mode=TwoWay}"/>
                                            <sdk:Label Content="{Binding MyLibraryResources.MinutesLabel, Source={StaticResource MyLibraryResources}}"/>
                                            <toolkit:NumericUpDown Margin="2" Width="50" Value="{Binding ToStart.Duration.Seconds, Mode=TwoWay}"/>
                                            <sdk:Label Content="{Binding MyLibraryResources.SecondsLabel, Source={StaticResource MyLibraryResources}}"/>
                                            <sdk:Label Content="{Binding MyLibraryResources.EveryLabel, Source={StaticResource MyLibraryResources}}"/>
                                            <toolkit:NumericUpDown Margin="2" Width="50" Value="{Binding ToStart.Tick.Minutes, Mode=TwoWay}"/>
                                            <sdk:Label Content="{Binding MyLibraryResources.MinutesLabel, Source={StaticResource MyLibraryResources}}"/>
                                            <toolkit:NumericUpDown Margin="2" Width="50" Value="{Binding ToStart.Tick.Seconds, Mode=TwoWay}"/>
                                            <sdk:Label Content="{Binding MyLibraryResources.SecondsLabel, Source={StaticResource MyLibraryResources}}"/>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <sdk:Label Content="{Binding MyLibraryResources.StartIntervalMessageLabel, Source={StaticResource MyLibraryResources}}"/>
                                            <TextBox Text="{Binding ToStart.EndMessage, Mode=TwoWay}" Margin="2" Width="350"/>
                                        </StackPanel>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <sdk:Label Content="{Binding MyLibraryResources.CountDownToEndOfIntervalLabel, Source={StaticResource MyLibraryResources}}" Width="200" />
                                        <CheckBox Margin="2" VerticalContentAlignment="Center" IsChecked="{Binding ToEnd.IsActive, Mode=TwoWay}"/>
                                    </StackPanel>
                                    <StackPanel Visibility="{Binding ToEnd.IsActive, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <StackPanel Orientation="Horizontal">
                                            <sdk:Label Content="{Binding MyLibraryResources.FromLabel, Source={StaticResource MyLibraryResources}}"/>
                                            <toolkit:NumericUpDown Margin="2" Width="50" Value="{Binding ToEnd.Duration.Minutes, Mode=TwoWay}"/>
                                            <sdk:Label Content="{Binding MyLibraryResources.MinutesLabel, Source={StaticResource MyLibraryResources}}"/>
                                            <toolkit:NumericUpDown Margin="2" Width="50" Value="{Binding ToEnd.Duration.Seconds, Mode=TwoWay}"/>
                                            <sdk:Label Content="{Binding MyLibraryResources.SecondsLabel, Source={StaticResource MyLibraryResources}}"/>
                                            <sdk:Label Content="{Binding MyLibraryResources.EveryLabel, Source={StaticResource MyLibraryResources}}"/>
                                            <toolkit:NumericUpDown Margin="2" Width="50" Value="{Binding ToEnd.Tick.Minutes, Mode=TwoWay}"/>
                                            <sdk:Label Content="{Binding MyLibraryResources.MinutesLabel, Source={StaticResource MyLibraryResources}}"/>
                                            <toolkit:NumericUpDown Margin="2" Width="50" Value="{Binding ToEnd.Tick.Seconds, Mode=TwoWay}"/>
                                            <sdk:Label Content="{Binding MyLibraryResources.SecondsLabel, Source={StaticResource MyLibraryResources}}"/>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <sdk:Label Content="{Binding MyLibraryResources.EndIntervalMessageLabel, Source={StaticResource MyLibraryResources}}"/>
                                            <TextBox Text="{Binding ToEnd.EndMessage, Mode=TwoWay}" Margin="2" Width="350"/>
                                        </StackPanel>
                                    </StackPanel>
                                </StackPanel>
                            </toolkit:Expander>
                            <StackPanel Orientation="Horizontal" Grid.Row="2" Margin="2">
                                <Button x:Name="AddIntervalButton" Margin="0,0,0,2" BorderThickness="0" IsTabStop="False" Command="{Binding DataContext.AddIntervalCommand, ElementName=LayoutRoot}" CommandParameter="{Binding}">
                                    <Image Source="/IndoorWorx.MyLibrary.Silverlight;component/Images/add.png" Width="16"/>
                                </Button>
                                <Button x:Name="MoveUpButton" Margin="2,0,0,2" BorderThickness="0" IsTabStop="False" Command="{Binding DataContext.MoveUpCommand, ElementName=LayoutRoot}" CommandParameter="{Binding}">
                                    <Image Source="/IndoorWorx.MyLibrary.Silverlight;component/Images/moveup.png" Width="16"/>
                                </Button>
                                <Button x:Name="MoveDownButton" Margin="2,0,0,2" BorderThickness="0" IsTabStop="False" Command="{Binding DataContext.MoveDownCommand, ElementName=LayoutRoot}" CommandParameter="{Binding}">
                                    <Image Source="/IndoorWorx.MyLibrary.Silverlight;component/Images/movedown.png" Width="16"/>
                                </Button>
                                <Button x:Name="DeleteIntervalButton" Margin="2,0,0,0" BorderThickness="0" Command="{Binding DataContext.RemoveIntervalCommand, ElementName=LayoutRoot}" CommandParameter="{Binding}">
                                    <Image Source="/IndoorWorx.MyLibrary.Silverlight;component/Images/delete.png" Width="16"/>
                                </Button>
                            </StackPanel>
                            <toolkit:Separator Grid.Row="3" Margin="2"/>
                        </Grid>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </ScrollViewer>
    </Grid>
</UserControl>
